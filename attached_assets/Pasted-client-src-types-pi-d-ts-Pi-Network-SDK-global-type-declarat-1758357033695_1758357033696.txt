client/src/types/pi.d.ts
-----------------------------------
 // Pi Network SDK global type declaration
 // See: https://developers.minepi.com/docs/pi-platform-sdk

 declare global {
   interface Window {
     Pi?: {
       authenticate: (
         scopes: string[],
         onSuccess: (auth: any) => void,
         onIncomplete: (error: any) => void
       ) => void;
     };
   }
 }

 export {};


client/src/components/PiAuthContext.tsx
-----------------------------------
import React, { createContext, useContext, useState, ReactNode } from "react";
import type { PiUser } from "./PiLogin";

interface PiAuthContextType {
  user: PiUser | null;
  setUser: (user: PiUser | null) => void;
}

const PiAuthContext = createContext<PiAuthContextType | undefined>(undefined);

export const PiAuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {
  const [user, setUser] = useState<PiUser | null>(null);
  return (
    <PiAuthContext.Provider value={{ user, setUser }}>
      {children}
    </PiAuthContext.Provider>
  );
};

export function usePiAuth() {
  const ctx = useContext(PiAuthContext);
  if (!ctx) throw new Error("usePiAuth must be used within PiAuthProvider");
  return ctx;
}


client/src/components/PiLogin.tsx
-----------------------------------
import React, { useState } from "react";

interface PiUser {
  uid: string;
  username: string;
  accessToken: string;
}

const SCOPES = ["username", "payments"];

const PiLogin: React.FC<{
  onAuth: (user: PiUser) => void;
  user: PiUser | null;
}> = ({ onAuth, user }) => {
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleLogin = async () => {
    setLoading(true);
    setError(null);
    try {
      if (!window.Pi) {
        setError("Pi SDK not loaded. Please use Pi Browser.");
        setLoading(false);
        return;
      }
      window.Pi.authenticate(
        SCOPES,
        (auth) => {
          onAuth({
            uid: auth.user.uid,
            username: auth.user.username,
            accessToken: auth.accessToken,
          });
          setLoading(false);
        },
        (err) => {
          setError(err?.message || "Authentication failed");
          setLoading(false);
        }
      );
    } catch (e: any) {
      setError(e.message || "Unknown error");
      setLoading(false);
    }
  };

  if (user) {
    return (
      <div className="flex items-center space-x-2">
        <span className="font-semibold text-green-600">@{user.username}</span>
      </div>
    );
  }

  return (
    <div className="flex flex-col items-center">
      <button
        className="px-4 py-2 bg-yellow-400 hover:bg-yellow-500 text-black font-bold rounded shadow"
        onClick={handleLogin}
        disabled={loading}
      >
        {loading ? "Logging in..." : "Login with Pi"}
      </button>
      {error && <span className="text-red-500 text-xs mt-2">{error}</span>}
    </div>
  );
};

export type { PiUser };
export default PiLogin;


client/src/App.tsx
-----------------------------------
import React from 'react';
import './App.css';

import RecentlyPlayed from './components/RecentlyPlayed';
import MusicPlayer from './components/MusicPlayer';
import { PlayerProvider } from './components/PlayerContext';
import './components/BottomNav.css';
import { Routes, Route, Link, useLocation } from 'react-router-dom';
import PiLogin from './components/PiLogin';
import { PiAuthProvider, usePiAuth } from './components/PiAuthContext';

const demoSongs = [
  {
    id: 1,
    title: "Retro Lounge",
    artist: "PurpleMusic Artist",
    coverUrl: "https://ofkfygqrfenctzitigae.supabase.co/storage/v1/object/public/Covers/F6897AAD-9902-4F0C-95EA-FD213A783D92.png",
  },
  {
    id: 2,
    title: "Deep Abstract Ambient",
    artist: "PurpleMusic Artist",
    coverUrl: "https://ofkfygqrfenctzitigae.supabase.co/storage/v1/object/public/Covers/621B279E-CA15-482E-849A-60D0774A9DD5.png",
  },
  {
    id: 3,
    title: "Running Night",
    artist: "PurpleMusic Artist",
    coverUrl: "https://ofkfygqrfenctzitigae.supabase.co/storage/v1/object/public/Covers/76DD6929-0A2A-4D7C-8E09-86124174600A.png",
  },
];

function App() {
  const location = useLocation();
  const { user, setUser } = usePiAuth();
  return (
    <PlayerProvider>
      <div className="App spotify-theme mobile-layout" style={{minHeight:'100vh',display:'flex',flexDirection:'column'}}>
        {/* HEADER */}
        <header className="pm-header" style={{
          width: '100%',
          background: 'rgba(40,40,48,0.72)',
          backdropFilter: 'blur(8px)',
          WebkitBackdropFilter: 'blur(8px)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between',
          padding: '18px 32px 10px 32px',
          boxSizing: 'border-box',
          position: 'sticky',
          top: 0,
          zIndex: 100,
        }}>
          <div style={{display:'flex',alignItems:'center',gap:'0.7rem'}}>
            <span style={{
              display:'inline-flex',
              alignItems:'center',
              justifyContent:'center',
              width:44,height:44,
              borderRadius:'50%',
              background:'linear-gradient(135deg,#a259ff 0%,#f9e24c 100%)',
              boxShadow:'0 2px 8px #0002',
              overflow:'hidden',
            }}>
              <img src={process.env.PUBLIC_URL + '/purplebeats-logo.png'} alt="PurpleBeats Logo" style={{width:38,height:38,objectFit:'contain',display:'block'}} />
            </span>
            <span style={{
              fontWeight:800,
              fontSize:'1.7rem',
              letterSpacing:'1.2px',
              fontFamily:'inherit',
              background:'linear-gradient(90deg,#a259ff 0%,#f9e24c 100%)',
              WebkitBackgroundClip:'text',
              WebkitTextFillColor:'transparent',
              backgroundClip:'text',
              userSelect:'none',
            }}>PurpleMusic</span>
          </div>
          <div style={{display:'flex',alignItems:'center'}}>
            <PiLogin user={user} onAuth={setUser} />
          </div>
        </header>
        {/* MAIN */}
        <main className="App-main" style={{flex:1}}>
          <Routes>
            <Route path="/" element={<RecentlyPlayed songs={demoSongs} />} />
            <Route path="/search" element={<div style={{textAlign:'center',marginTop:'3rem',fontSize:'1.3rem',color:'#fff'}}>Search Page</div>} />
            <Route path="/liked" element={<div style={{textAlign:'center',marginTop:'3rem',fontSize:'1.3rem',color:'#fff'}}>Liked Songs</div>} />
            <Route path="/playlists" element={<div style={{textAlign:'center',marginTop:'3rem',fontSize:'1.3rem',color:'#fff'}}>My Playlists</div>} />
          </Routes>
        </main>
        {/* MUSIC PLAYER */}
        <MusicPlayer />
        {/* FOOTER NAV */}
        <footer className="pm-footer-nav" style={{
          width: '100%',
          background: 'rgba(40,40,48,0.72)',
          backdropFilter: 'blur(8px)',
          WebkitBackdropFilter: 'blur(8px)',
          borderTop: '1.5px solid #232323',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-around',
          padding: '0.2rem 0 0.1rem 0',
          position: 'sticky',
          bottom: 0,
          zIndex: 99,
          height: '64px',
        }}>
          <Link to="/" className={location.pathname==='/' ? 'pm-footer-icon active' : 'pm-footer-icon'} style={{textDecoration:'none',flex:1,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',gap:'2px'}}>
            <svg width="26" height="26" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" style={{color: location.pathname==='/' ? '#a259ff' : '#b3b3b3'}}><path d="M3 12L12 3l9 9"/><path d="M9 21V9h6v12"/></svg>
            <span style={{fontSize:'0.82rem',marginTop:1,fontWeight:500,color: location.pathname==='/' ? '#a259ff' : '#b3b3b3'}}>Home</span>
          </Link>
          <Link to="/search" className={location.pathname==='/search' ? 'pm-footer-icon active' : 'pm-footer-icon'} style={{textDecoration:'none',flex:1,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',gap:'2px'}}>
            <svg width="26" height="26" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" style={{color: location.pathname==='/search' ? '#a259ff' : '#b3b3b3'}}><circle cx="11" cy="11" r="8"/><line x1="21" y1="21" x2="16.65" y2="16.65"/></svg>
            <span style={{fontSize:'0.82rem',marginTop:1,fontWeight:500,color: location.pathname==='/search' ? '#a259ff' : '#b3b3b3'}}>Search</span>
          </Link>
          <Link to="/playlists" className={location.pathname==='/playlists' ? 'pm-footer-icon active' : 'pm-footer-icon'} style={{textDecoration:'none',flex:1,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',gap:'2px'}}>
            <svg width="26" height="26" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" style={{color: location.pathname==='/playlists' ? '#a259ff' : '#b3b3b3'}}><rect x="3" y="3" width="18" height="18" rx="2" ry="2"/><line x1="9" y1="9" x2="15" y2="9"/><line x1="9" y1="15" x2="15" y2="15"/><line x1="9" y1="12" x2="15" y2="12"/></svg>
            <span style={{fontSize:'0.82rem',marginTop:1,fontWeight:500,color: location.pathname==='/playlists' ? '#a259ff' : '#b3b3b3'}}>Library</span>
          </Link>
          <Link to="/liked" className={location.pathname==='/liked' ? 'pm-footer-icon active' : 'pm-footer-icon'} style={{textDecoration:'none',flex:1,display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',gap:'2px'}}>
            <svg width="26" height="26" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" style={{color: location.pathname==='/liked' ? '#a259ff' : '#b3b3b3'}}><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/></svg>
            <span style={{fontSize:'0.82rem',marginTop:1,fontWeight:500,color: location.pathname==='/liked' ? '#a259ff' : '#b3b3b3'}}>Liked Songs</span>
          </Link>
        </footer>
      </div>
    </PlayerProvider>
  );
}

// Wrap App with PiAuthProvider
const AppWithPiAuth = () => (
  <PiAuthProvider>
    <App />
  </PiAuthProvider>
);

export default AppWithPiAuth;


client/public/index.html
-----------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="theme-color" content="#000000" />
  <meta
    name="description"
    content="Web site created using create-react-app"
  />
  <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
  <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
  <title>React App</title>
</head>
<body>
  <noscript>You need to enable JavaScript to run this app.</noscript>
  <div id="root"></div>

  <!-- Pi Network SDK: Only works inside Pi Browser -->
  <script src="https://sdk.minepi.com/pi-sdk.js"></script>
</body>
</html>